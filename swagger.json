{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Quick Credit API",
    "description" : "Quick Credit is an online lending platform that provides short term soft loans to individuals. This helps solve problems of financial inclusion as a way to alleviate poverty and empower low income earners.\n",
    "contact" : {
      "email" : "onikoyiridwan@gmail.com"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://opensource.org/licenses/MIT"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8080/api/v1/",
    "description" : "QUICK CREDIT API"
  } ],
  "tags" : [ {
    "name" : "User",
    "description" : "Everything about user authentication."
  }, {
    "name" : "Admin",
    "description" : "Everything about admin authetication."
  }, {
    "name" : "Loan Collection",
    "description" : "Everything about your loan"
  }, {
    "name" : "Repayment Collection",
    "description" : "Operations about loan repayment transaction"
  } ],
  "paths" : {
    "/auth/signup" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "User (client) can sign up.",
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_201"
                }
              }
            }
          },
          "409" : {
            "description" : "Email has already been taken.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_409"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "User (client) can log in.",
        "operationId" : "loginUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200"
                }
              }
            }
          },
          "401" : {
            "description" : "Incorrect email or password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/google" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "User (client) can logIn or signUp with Google.",
        "operationId" : "googleOauth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/facebook" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "User (client) can logIn or signUp with Facebook.",
        "operationId" : "facebookOauth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_3"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "user can logout",
        "operationId" : "logoutUser",
        "responses" : {
          "204" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/reset-password" : {
      "patch" : {
        "tags" : [ "User" ],
        "summary" : "update User password",
        "operationId" : "resetPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_4"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_1"
                }
              }
            }
          },
          "401" : {
            "description" : "Incorrect password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_401_1"
                }
              }
            }
          }
        }
      }
    },
    "/forgot-password" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "send password reset mail to user",
        "operationId" : "sendPasswordResetEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_5"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_2"
                }
              }
            }
          },
          "404" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/forgot-password/{token}" : {
      "patch" : {
        "tags" : [ "User" ],
        "summary" : "reset user password",
        "operationId" : "receiveNewPassword",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "token sent to user email",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_6"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_3"
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid email in token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_404_1"
                }
              }
            }
          }
        }
      }
    },
    "/admin/auth/signup" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "admin can add new Admin.",
        "description" : "Only admin can add new Admin",
        "operationId" : "createAdmin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_7"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_201_1"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "409" : {
            "description" : "Email has already been taken.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_409"
                }
              }
            }
          }
        }
      }
    },
    "/admin/auth/login" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "admin can log in.",
        "operationId" : "loginAdmin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_8"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_4"
                }
              }
            }
          },
          "401" : {
            "description" : "Incorrect email or password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userEmail}/verify" : {
      "patch" : {
        "tags" : [ "Admin" ],
        "summary" : "Admin can mark a client as verified",
        "operationId" : "verifyUser",
        "parameters" : [ {
          "name" : "userEmail",
          "in" : "path",
          "description" : "user email to verify",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_5"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Incorrect / Invalid userEmail Passed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_404_1"
                }
              }
            }
          }
        }
      }
    },
    "/loans" : {
      "get" : {
        "tags" : [ "Loan Collection" ],
        "summary" : "Admin can view all loan applications.",
        "operationId" : "getAllLoans",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "approved"
          }
        }, {
          "name" : "repaid",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "loan created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_6"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_400"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Loan Collection" ],
        "summary" : "User (client) can request for only one loan at a time.",
        "operationId" : "createLoan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_9"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "loan created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_201_2"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "oneOf" : [ {
                    "$ref" : "#/components/responses/unverifiedUser"
                  }, {
                    "$ref" : "#/components/responses/unpaidLoan"
                  }, {
                    "$ref" : "#/components/responses/pendingLoan"
                  }, {
                    "$ref" : "#/components/responses/invalidTenor"
                  } ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/loans/user" : {
      "get" : {
        "tags" : [ "Loan Collection" ],
        "summary" : "User can view all his loan applications.",
        "operationId" : "getLoanByUser",
        "responses" : {
          "200" : {
            "description" : "loan created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_6"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Loan not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_404_2"
                }
              }
            }
          }
        }
      }
    },
    "/loans/{id}" : {
      "get" : {
        "tags" : [ "Loan Collection" ],
        "summary" : "Admin can view a specific loan application.",
        "operationId" : "getLoanById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "loan Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "loan found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_7"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "loan not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_404_2"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Loan Collection" ],
        "summary" : "Admin can approve or reject a client’s loan application.",
        "operationId" : "approveOrRejectLoan",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "loan Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/responses/body_10"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "loan updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_8"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_400_1"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "loan not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_404_2"
                }
              }
            }
          }
        }
      }
    },
    "/loans/{id}/repayments" : {
      "get" : {
        "tags" : [ "Repayment Collection" ],
        "summary" : "User (client) can view loan repayment history, to keep track of his/her liability or responsibilities.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "repayment found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_200_9"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "loan not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_404_2"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Repayment Collection" ],
        "summary" : "Admin can post loan repayment transaction in favour of a client.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "repayment created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_201_3"
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication information is missing or invalid",
            "headers" : {
              "WWW_Authenticate" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "loan not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/inline_response_404_2"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Loan" : {
        "required" : [ "amount", "balance", "createdOn", "interest", "paymentInstallment", "repaid", "status", "tenor", "user" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "Loan Status",
            "enum" : [ "pending", "approved", "rejected" ]
          },
          "repaid" : {
            "type" : "boolean",
            "default" : false
          },
          "tenor" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "example" : 3
          },
          "amount" : {
            "type" : "number",
            "format" : "float",
            "example" : 100000
          },
          "paymentInstallment" : {
            "type" : "number",
            "format" : "float",
            "example" : 35000
          },
          "balance" : {
            "type" : "number",
            "format" : "float",
            "example" : 105000
          },
          "interest" : {
            "type" : "number",
            "format" : "float",
            "example" : 5000
          }
        },
        "xml" : {
          "name" : "Loan"
        }
      },
      "User" : {
        "required" : [ "email", "firstName", "id", "isAdmin", "lastName", "password", "status" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "uniqueItems" : true,
            "type" : "integer",
            "format" : "int64"
          },
          "email" : {
            "uniqueItems" : true,
            "type" : "string",
            "format" : "email"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          },
          "address" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "description" : "User Status",
            "enum" : [ "unverified", "verified" ]
          },
          "isAdmin" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "xml" : {
          "name" : "User"
        }
      },
      "Repayment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "uniqueItems" : true,
            "type" : "integer",
            "format" : "int64"
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "loanId" : {
            "$ref" : "#/components/schemas/Loan"
          },
          "amount" : {
            "type" : "number",
            "format" : "float"
          }
        }
      }
    },
    "responses" : {
      "UnauthorizedError" : {
        "description" : "Authentication information is missing or invalid",
        "headers" : {
          "WWW_Authenticate" : {
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "unverifiedUser" : {
        "description" : "Error response for unverified user",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "format" : "int32",
                  "example" : 400
                },
                "data" : {
                  "type" : "string",
                  "example" : "Account has not been verified"
                }
              }
            }
          }
        }
      },
      "unpaidLoan" : {
        "description" : "Error response for unpaid loan",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "format" : "int32",
                  "example" : 400
                },
                "data" : {
                  "type" : "string",
                  "example" : "Still have an unpaid loan"
                }
              }
            }
          }
        }
      },
      "pendingLoan" : {
        "description" : "Error response for pending loan",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "format" : "int32",
                  "example" : 400
                },
                "data" : {
                  "type" : "string",
                  "example" : "Still have a pending loan"
                }
              }
            }
          }
        }
      },
      "invalidTenor" : {
        "description" : "Error response for invalid tenor",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "format" : "int32",
                  "example" : 400
                },
                "data" : {
                  "type" : "string",
                  "example" : "Tenor is between 1 to 12 months"
                }
              }
            }
          }
        }
      },
      "inline_response_201_data_user" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "johndoe@gmail.com"
          },
          "firstName" : {
            "type" : "string",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Doe"
          }
        }
      },
      "inline_response_201_data" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/responses/inline_response_201_data_user"
          }
        }
      },
      "inline_response_201_1_data" : {
        "type" : "object",
        "properties" : {
          "admin" : {
            "$ref" : "#/components/responses/inline_response_201_data_user"
          }
        }
      },
      "inline_response_200_5_data_user" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "johndoe@gmail.com"
          },
          "firstName" : {
            "type" : "string",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Doe"
          },
          "address" : {
            "type" : "string",
            "example" : "5, Odu Street, Bariga, Lagos Nigeria."
          },
          "status" : {
            "type" : "string",
            "example" : "verified"
          }
        }
      },
      "inline_response_200_5_data" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/responses/inline_response_200_5_data_user"
          }
        }
      },
      "inline_response_201_2_data" : {
        "type" : "object",
        "properties" : {
          "loan" : {
            "$ref" : "#/components/schemas/Loan"
          }
        }
      },
      "inline_response_200_9_data" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "format" : "float",
            "example" : 100000
          },
          "interest" : {
            "type" : "number",
            "format" : "float",
            "example" : 5000
          },
          "paymentInstallment" : {
            "type" : "number",
            "format" : "float",
            "example" : 35000
          }
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "johndoe@gmail.com"
          },
          "firstName" : {
            "type" : "string",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Doe"
          },
          "password" : {
            "type" : "string",
            "format" : "password",
            "example" : "Strong_password1"
          },
          "address" : {
            "type" : "string",
            "example" : "5, Odu Street, Lagos, Nigeria."
          }
        }
      },
      "inline_response_201" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 201
          },
          "data" : {
            "$ref" : "#/components/responses/inline_response_201_data"
          }
        }
      },
      "inline_response_409" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 409
          },
          "error" : {
            "type" : "string",
            "example" : "Email has already been taken."
          }
        }
      },
      "body_1" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "johndoe@gmail.com"
          },
          "password" : {
            "type" : "string",
            "format" : "password",
            "example" : "Strong_password1"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "$ref" : "#/components/responses/inline_response_201_data"
          }
        }
      },
      "inline_response_401" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 401
          },
          "error" : {
            "type" : "string",
            "example" : "The email and password you entered did not match our records. Please double-check and try again."
          }
        }
      },
      "body_2" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          }
        }
      },
      "body_3" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          }
        }
      },
      "body_4" : {
        "type" : "object",
        "properties" : {
          "previousPassword" : {
            "type" : "string",
            "format" : "password"
          },
          "newPassword" : {
            "type" : "string",
            "format" : "password"
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "type" : "string",
            "example" : "Successfully Reset Password."
          }
        }
      },
      "inline_response_401_1" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 401
          },
          "error" : {
            "type" : "string",
            "example" : "The previous password you entered did not match our records. Please double-check and try again."
          }
        }
      },
      "body_5" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email"
          }
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "type" : "string",
            "example" : "We have e-mailed your password reset link"
          }
        }
      },
      "inline_response_404" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "type" : "string",
            "example" : "The email you entered did not match our records. Please double-check and try again."
          }
        }
      },
      "body_6" : {
        "type" : "object",
        "properties" : {
          "newPassword" : {
            "type" : "string",
            "format" : "password"
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "type" : "string",
            "example" : "Your password has been reset successfully"
          }
        }
      },
      "inline_response_404_1" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 404
          },
          "data" : {
            "type" : "string",
            "example" : "The email you entered did not match our records. Please double-check and try again."
          }
        }
      },
      "body_7" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "johndoe@gmail.com"
          },
          "firstName" : {
            "type" : "string",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Doe"
          },
          "password" : {
            "type" : "string",
            "format" : "password",
            "example" : "Strong_password1"
          },
          "address" : {
            "type" : "string",
            "example" : "5, Odu Street, Lagos, Nigeria."
          }
        }
      },
      "inline_response_201_1" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 201
          },
          "data" : {
            "$ref" : "#/components/responses/inline_response_201_1_data"
          }
        }
      },
      "body_8" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "johndoe@gmail.com"
          },
          "password" : {
            "type" : "string",
            "format" : "password",
            "example" : "Strong_password1"
          }
        }
      },
      "inline_response_200_4" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "$ref" : "#/components/responses/inline_response_201_1_data"
          }
        }
      },
      "inline_response_200_5" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "$ref" : "#/components/responses/inline_response_200_5_data"
          }
        }
      },
      "inline_response_200_6" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Loan"
            }
          }
        }
      },
      "inline_response_400" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 400
          },
          "data" : {
            "type" : "string",
            "example" : "Query not supported"
          }
        }
      },
      "body_9" : {
        "type" : "object",
        "properties" : {
          "tenor" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "example" : 3
          },
          "amount" : {
            "type" : "number",
            "format" : "float",
            "example" : 100000
          }
        }
      },
      "inline_response_201_2" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 201
          },
          "data" : {
            "$ref" : "#/components/responses/inline_response_201_2_data"
          }
        }
      },
      "inline_response_404_2" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 404
          },
          "data" : {
            "type" : "string",
            "example" : "Loan not found"
          }
        }
      },
      "inline_response_200_7" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "$ref" : "#/components/schemas/Loan"
          }
        }
      },
      "body_10" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "approved", "rejected" ]
          }
        }
      },
      "inline_response_200_8" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "$ref" : "#/components/responses/inline_response_201_2_data"
          }
        }
      },
      "inline_response_400_1" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 400
          },
          "data" : {
            "type" : "string",
            "example" : "Status not supported"
          }
        }
      },
      "inline_response_200_9" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 200
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/responses/inline_response_200_9_data"
            }
          }
        }
      },
      "inline_response_201_3" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 201
          },
          "data" : {
            "$ref" : "#/components/schemas/Repayment"
          }
        }
      }
    }
  }
}